document.addEventListener("DOMContentLoaded", () => {
    setTimeout(() => {
      if (
        true
      ) {
//////////////////setting ///////////////////////////////////////////////////////////////////
        const place =  "اسفل - يمين";
        const stepsNo = 3;
        const step1MinPrice = 100;
        const step2MinPrice = 400;
        const step3MinPrice = 1000;
        const $step1TypeOfGift = "copoun";
        const copouns1Text = "توصيل مجاني";
        const step1SuccessText = "مبروك كسبت  كوبون";
        const copouns1ColorType = "gradient";
        const copouns1Color1 = "#000000";
        const copouns1Color2 = "#ffffff";
        const copouns1TextColor = "#ffffff";
        const copouns1Code = "11111";
        const step1Text = "الخطوه الاولى";
        const step1Color = "#F54747";
        const step2SuccessText = "مبروك كسبت  كوبون";
        const copouns2Color1 = "#Cdfdfd";
        const copouns2Color2 = "#ffffff";
        const copouns2TextColor = "#000000";
        const copouns2Code = "22222";
        const step2Text = "الخطوه الثانيه";
        const step2Color = "#F54747";
        const color1 = "#F54747";
        const color2 = "#ffffff";
        const step3SuccessText = "مبروك كسبت  كوبون";
        const copouns3Color1 = "#Cefefe";
        const copouns3Color2 = "#ffffff";
        const copouns3TextColor = "#F54747";
        const copouns3Code = "33333";
        const step3Text = "الخطوه الثالثه";
        const step3Color = "#F54747";
        const colorType = "gradient";
        const waitingTimeToShowPopup = 1;
        const ShowingTime = 10;
        const width = 100;
/////////////////////////////////////////////////////////////////////////////////////////////
        const htmlContent = `
           <div class="plugin-container slide-in" style="display: none;">
          <img class="ClosePlugin" src="https://eu2.contabostorage.com/fe879ba30cfe45cdb8804b2950e9808c:tooliify/photos/close-circle.svg" alt="ClosePlugin" />
            <div class="info-text"></div>
            <div class="slider-container">
              <div class="slider-progress"></div>
            </div>
          `;
        const cssStyles = `
       .slide-out {
          opacity: 1;
          transform: ${
            `${place}` === "اسفل - يمين"
              ? "translate(0%, 0%)"
              : `${place}` === "الاعلى - يمين"
              ? "translate(0%,0%)"
              : `${place}` === "الاعلى - منتصف"
              ? "translate(-50%, 0%)"
              : `${place}` === "الاعلى - يسار"
              ? "translate(0%, 0%)"
              : `${place}` === "اسفل - منتصف"
              ? "translate(-50%, 0%)"
              : `${place}` === "اسفل - يسار"
              ? "translate(0%,0%)"
              : `${place}` === "يمين"
              ? "translateX(0%)"
              : `${place}` === "يسار"
              ? "translateX(0%)"
              : "translate(0, 0)"
          };
        }
      
        .slide-in {
          opacity: 0;
          transform: ${
            `${place}` === "اسفل - يمين"
              ? "translate(100%,0%)"
              : `${place}` === "الاعلى - يمين"
              ? "translate(100%,0%)"
              : `${place}` === "الاعلى - منتصف"
              ? "translate(-50%, -100%)"
              : `${place}` === "الاعلى - يسار"
              ? "translate(-100%, 0%)"
              : `${place}` === "اسفل - منتصف"
              ? "translate(-50%, 100%)"
              : `${place}` === "اسفل - يسار"
              ? "translate(-100%, 0%)"
              : `${place}` === "يمين"
              ? "translateX(100%)"
              : `${place}` === "يسار"
              ? "translateX(-100%)"
              : "translate(0, 0)"
          };
        }
          
       .popup-content {
          width: 100%;
          display: flex;
          flex-direction: column;
          justify-content: space-around;
          align-items: center;
          height: 70%;
      }
          .info-text {
            text-align: center;
          font-size: 16px;
          width: 100%;
          display: flex;
          justify-content: center;
          align-items: baseline;
          }
        
          .slider-container {
            position: relative;
            width: 100%;
            height: 10px;
            background-color: #ccc;
            border-radius: 5px;
            margin-bottom: 20px;
            margin-left: 12px;
            left:10px;
          }
        
          .slider-progress {
            position: absolute;
            height: 100%;
            right: 0;
             border-radius: 5px;
          }
        
          .slider-thumb {
            position: absolute;
            width: 25px;
            height: 25px;
             border-radius: 50%;
            top: 50%;
            transform: translate(50%, -50%);
            background:#ffffff;
          }
        
         .iconSales {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          overflow: hidden;
          border-radius: 50%;
          width: 90%;
          height: 90%;
          display: flex;
          margin: auto;
          justify-content: center;
      }
        .iconSales svg {
         width: 15px;
          height: 100%;
          object-fit: contain;
          color: white;
          fill: white !important;
      }
      
          // .iconSales img {
          //   width: 30px;
          //   object-fit: contain;
          //   position: absolute;
          //   top: 50%;
          //   left: 50%;
          //   transform: translate(-50%, -50%);
          // }
        
         .tooltip {
          
          position: absolute;
          top: 25px;
          right: 8%;
          transform: translateX(50%);
          padding: 5px;
          border-radius: 3px;
          font-size: 14px;
          white-space: nowrap;
          font-weight: 500;
      }
        
          .popup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            z-index: 1000;
            font-size: 18px;
            text-align: center;
            direction: rtl;
            width: 400px;
            height: 200px;
            display: flex;
            justify-content: center;
            align-items: center;
          }
        
        .closeBtn {
          margin-top: 10px;
          border: none;
          border-radius: 27px;
          cursor: pointer;
          position: absolute;
          top: 0;
          right: 10px;
          background: #D9D9D9E5;
          padding: 4px;
      }
        
          .popup p {
            font-size: 1.6rem;
            font-weight: 400;
          }
        
          .information-text {
            text-wrap: nowrap;
            font-size: 16px;
            display: flex;
            justify-content: start;
            align-items: center;
            gap: 4px;
            direction: rtl;
            width: 100%;
            color: $generaltextColor;
        }
        .ClosePlugin{
        cursor: pointer;
        position: absolute;
            top: 10px;
            width: 31px !important;
            height: 30px !important;
                z-index: 999;
        
        }
        
         .plugin-container {
            visibility:visible;
            background: $bgColor;
            width: 500px;
            height: 180px;
            padding: 1.25rem;
            box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 8px 0px;
            border-radius: 1rem;
            position: fixed;
              display: flex !important;
            flex-direction: column;
            gap: 30px;
            justify-content: center;
            align-items: flex-start;
         transition: transform 0.5s ease, opacity 0.5s ease;
             z-index: 9999;
        }
             .information-text svg {
          width: 40px;
          height: 31px;
      }
          .inner-dev-{
          display: flex ;
          gap: 1px;
          }
          @media (max-width: 767px) {
           .popup {
            width: 300px !important;
            height: 150px !important;
          }
          .plugin-container {
            width:400px;
            height: 170px;
        }
        .information-text {
        font-size: 13px;
        }
        .tooltip{
        font-size: 11px;
        }
          }
        `;
  
        document.head.innerHTML += `<style>${cssStyles}</style>`;
        document.body.insertAdjacentHTML("beforeend", htmlContent);
 
        const totalAmount =
          `${stepsNo}` == 1
            ? `${step1MinPrice}`
            : `${stepsNo}` == 2
            ? Math.max(`${step1MinPrice}`, `${step2MinPrice}`)
            : `${stepsNo}` == 3
            ? Math.max(`${step1MinPrice}`, `${step2MinPrice}`, `${step3MinPrice}`)
            : 0;
             
         let remainingAmount;
        
        ///////////////////////////////////////////////////////
        ///////////////confetti///////////////////////////////
        if (!document.querySelector("#confetti-js")) {
          const script = document.createElement("script");
          script.id = "confetti-js";
          script.src =
            "https://cdn.jsdelivr.net/npm/confetti-js@0.0.18/dist/index.min.js";
          script.onload = initConfetti; // Call initConfetti after loading
          document.head.appendChild(script);
        } else {
          initConfetti();
        }
  
        // Step 2: Initialize the confetti setup and create a canvas for it
        function initConfetti() {
          // Create a canvas element for the confetti animation
          const canvas = document.createElement("canvas");
          canvas.id = "confetti-canvas";
          canvas.style.position = "fixed";
          canvas.style.top = 0;
          canvas.style.left = 0;
          canvas.style.width = "100%";
          canvas.style.height = "100%";
          canvas.style.pointerEvents = "none";
          document.body.appendChild(canvas);
  
          // Step 3: Configure the confetti generator
          window.confetti = new ConfettiGenerator({
            target: "confetti-canvas",
            max: 80, // Maximum number of confetti particles
            size: 1, // Size of the confetti pieces
            animate: true, // Enable animation
            props: ["circle", "square", "triangle"], // Shapes of confetti
            colors: [
              [165, 104, 246],
              [230, 61, 135],
              [0, 199, 228],
              [253, 214, 126],
            ], // Custom colors
            clock: 25, // Speed of the confetti falling
            rotate: true, // Enable rotation for confetti pieces
            width: window.innerWidth,
            height: window.innerHeight,
          });
        }
  
        //////////////////////////////////////////////////////////////////////
        const step1TypeOfGift = `${$step1TypeOfGift}`;
        const giftData = [
          {
            id: 1,
            headerIcon:
              step1TypeOfGift === "copoun"
                ? `<svg width="31" height="32" viewBox="0 0 31 32" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M29.5054 16.4145C29.3754 16.1511 29.3754 15.8489 29.5054 15.5856L30.7103 13.144C31.3812 11.7846 30.8496 10.1643 29.5002 9.45513L27.0765 8.1814C26.815 8.04402 26.6358 7.79953 26.5846 7.51084L26.1106 4.83406C25.8466 3.3437 24.4548 2.34222 22.9425 2.55415L20.2259 2.93477C19.9326 2.97577 19.6427 2.8824 19.43 2.67859L17.458 0.789108C16.36 -0.263005 14.64 -0.263067 13.542 0.789108L11.57 2.67877C11.3573 2.88265 11.0673 2.97583 10.7741 2.93496L8.05752 2.55434C6.5447 2.34228 5.15335 3.34389 4.88941 4.83425L4.4154 7.51091C4.36423 7.79965 4.18496 8.04409 3.92354 8.18152L1.49988 9.45526C0.15043 10.1644 -0.381122 11.7848 0.289754 13.1442L1.49464 15.5857C1.62463 15.8491 1.62463 16.1512 1.49464 16.4146L0.289691 18.8561C-0.381185 20.2155 0.150367 21.8358 1.49982 22.545L3.92348 23.8187C4.18496 23.9561 4.36423 24.2006 4.4154 24.4893L4.88941 27.1661C5.12969 28.5228 6.30423 29.4743 7.65412 29.4741C7.78707 29.4741 7.92198 29.4649 8.05758 29.4459L10.7742 29.0653C11.0672 29.0241 11.3573 29.1177 11.5701 29.3215L13.542 31.2109C14.0911 31.7371 14.7954 32.0001 15.5 32C16.2044 31.9999 16.9091 31.7369 17.458 31.2109L19.43 29.3215C19.6427 29.1177 19.9328 29.0245 20.2259 29.0653L22.9425 29.4459C24.4555 29.6579 25.8466 28.6563 26.1106 27.166L26.5847 24.4893C26.6358 24.2006 26.8151 23.9562 27.0765 23.8187L29.5002 22.545C30.8496 21.8359 31.3812 20.2154 30.7103 18.856L29.5054 16.4145ZM11.7733 7.69478C13.6569 7.69478 15.1894 9.2127 15.1894 11.0784C15.1894 12.9442 13.6569 14.4621 11.7733 14.4621C9.88962 14.4621 8.35711 12.9442 8.35711 11.0784C8.35711 9.2127 9.88962 7.69478 11.7733 7.69478ZM10.01 22.7427C9.82809 22.9229 9.58964 23.013 9.35125 23.013C9.11286 23.013 8.87434 22.923 8.69249 22.7427C8.32866 22.3824 8.32866 21.7981 8.69249 21.4377L20.9899 9.25726C21.3537 8.89689 21.9437 8.89689 22.3075 9.25726C22.6713 9.61763 22.6713 10.2019 22.3075 10.5623L10.01 22.7427ZM19.2266 24.3053C17.343 24.3053 15.8104 22.7874 15.8104 20.9217C15.8104 19.056 17.343 17.538 19.2266 17.538C21.1103 17.538 22.6428 19.056 22.6428 20.9217C22.6428 22.7874 21.1103 24.3053 19.2266 24.3053Z" fill="#000000"></path></svg>`
                : `<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_4187_22799)"><path d="M25.7146 24.8428C24.1366 24.8428 22.8574 26.1212 22.8574 27.6982C22.8574 29.2752 24.1366 30.5536 25.7146 30.5536C27.2925 30.5536 28.5717 29.2752 28.5717 27.6982C28.5698 26.122 27.2917 24.8447 25.7146 24.8428ZM25.7146 29.4114C25.0212 29.4114 24.3961 28.994 24.1308 28.3538C23.8654 27.7136 24.0121 26.9767 24.5024 26.4867C24.9927 25.9967 25.73 25.8502 26.3706 26.1153C27.0112 26.3805 27.4289 27.0052 27.4289 27.6982C27.4289 28.6444 26.6613 29.4114 25.7146 29.4114Z" fill="#000000"></path><path d="M25.714 28.2696C26.0296 28.2696 26.2854 28.0139 26.2854 27.6985C26.2854 27.3831 26.0296 27.1274 25.714 27.1274C25.3984 27.1274 25.1426 27.3831 25.1426 27.6985C25.1426 28.0139 25.3984 28.2696 25.714 28.2696Z" fill="#000000"></path><path d="M7.99916 28.2696C8.31475 28.2696 8.57059 28.0139 8.57059 27.6985C8.57059 27.3831 8.31475 27.1274 7.99916 27.1274C7.68357 27.1274 7.42773 27.3831 7.42773 27.6985C7.42773 28.0139 7.68357 28.2696 7.99916 28.2696Z" fill="#000000"></path><path d="M17.7143 20.8454H20.5714V4.2841C20.5695 2.7079 19.2915 1.4306 17.7143 1.42871H2.85714C1.27997 1.4306 0.00188921 2.7079 0 4.2841V19.1321C0 20.0783 0.767512 20.8454 1.71429 20.8454H17.7143ZM3.42857 3.71302H2.28571C1.97012 3.71302 1.71429 3.45734 1.71429 3.14195C1.71429 2.82655 1.97012 2.57087 2.28571 2.57087H3.42857C3.74416 2.57087 4 2.82655 4 3.14195C4 3.45734 3.74416 3.71302 3.42857 3.71302ZM13.7143 3.71302H6.28571C5.97012 3.71302 5.71429 3.45734 5.71429 3.14195C5.71429 2.82655 5.97012 2.57087 6.28571 2.57087H13.7143C14.0299 2.57087 14.2857 2.82655 14.2857 3.14195C14.2857 3.45734 14.0299 3.71302 13.7143 3.71302Z" fill="#000000"></path><path d="M7.99972 24.8428C6.42176 24.8428 5.14258 26.1212 5.14258 27.6982C5.14258 29.2752 6.42176 30.5536 7.99972 30.5536C9.57768 30.5536 10.8569 29.2752 10.8569 27.6982C10.855 26.122 9.57689 24.8447 7.99972 24.8428ZM7.99972 29.4114C7.05295 29.4114 6.28544 28.6444 6.28544 27.6982C6.28544 26.752 7.05295 25.9849 7.99972 25.9849C8.94649 25.9849 9.71401 26.752 9.71401 27.6982C9.71401 28.6444 8.94649 29.4114 7.99972 29.4114Z" fill="#000000"></path><path d="M22.8566 16.8479V11.1371C22.8566 10.1909 23.6241 9.4239 24.5709 9.4239H27.4543L26.7469 8.50446C26.6384 8.3645 26.4714 8.28233 26.2943 8.28174H21.7137V20.8455H26.8566C27.1722 20.8455 27.428 21.1011 27.428 21.4165C27.428 21.7319 27.1722 21.9876 26.8566 21.9876H2.28516V25.4141C2.28516 26.0449 2.79683 26.5562 3.42801 26.5562H4.17087C4.67832 24.8651 6.23571 23.707 8.0023 23.707C9.76889 23.707 11.3263 24.8651 11.8337 26.5562H21.8852C22.3926 24.8651 23.95 23.707 25.7166 23.707C27.4832 23.707 29.0406 24.8651 29.548 26.5562H30.8566C31.4878 26.5562 31.9994 26.0449 31.9994 25.4141V18.5612H24.5709C23.6241 18.5612 22.8566 17.7941 22.8566 16.8479ZM14.2852 25.4141H13.1423C12.8267 25.4141 12.5709 25.1584 12.5709 24.843C12.5709 24.5276 12.8267 24.2719 13.1423 24.2719H14.2852C14.6007 24.2719 14.8566 24.5276 14.8566 24.843C14.8566 25.1584 14.6007 25.4141 14.2852 25.4141ZM20.5709 25.4141H16.5709C16.2553 25.4141 15.9994 25.1584 15.9994 24.843C15.9994 24.5276 16.2553 24.2719 16.5709 24.2719H20.5709C20.8865 24.2719 21.1423 24.5276 21.1423 24.843C21.1423 25.1584 20.8865 25.4141 20.5709 25.4141ZM29.1423 20.8455H30.2852C30.6007 20.8455 30.8566 21.1011 30.8566 21.4165C30.8566 21.7319 30.6007 21.9876 30.2852 21.9876H29.1423C28.8267 21.9876 28.5709 21.7319 28.5709 21.4165C28.5709 21.1011 28.8267 20.8455 29.1423 20.8455Z" fill="#000000"></path><path d="M31.8817 15.1751L28.3343 10.5659H24.5714C24.2558 10.5659 24 10.8216 24 11.137V16.8478C24 17.1632 24.2558 17.4189 24.5714 17.4189H32V15.5234C32.0001 15.3975 31.9585 15.275 31.8817 15.1751ZM26.2857 15.7056C26.2857 16.021 26.0299 16.2767 25.7143 16.2767C25.3987 16.2767 25.1429 16.021 25.1429 15.7056V15.1345C25.1429 14.8191 25.3987 14.5635 25.7143 14.5635C26.0299 14.5635 26.2857 14.8191 26.2857 15.1345V15.7056ZM26.2857 12.8502C26.2857 13.1656 26.0299 13.4213 25.7143 13.4213C25.3987 13.4213 25.1429 13.1656 25.1429 12.8502V12.2792C25.1429 11.9638 25.3987 11.7081 25.7143 11.7081C26.0299 11.7081 26.2857 11.9638 26.2857 12.2792V12.8502Z" fill="#000000"></path></g><defs><clipPath id="clip0_4187_22799"><rect width="32" height="32" fill="white" transform="matrix(-1 0 0 1 32 0)"></rect></clipPath></defs></svg>`,
            icon:
              step1TypeOfGift === "copoun"
                ? `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_4110_28222)"><path d="M13.841 7.97124C13.7849 7.85637 13.7849 7.72463 13.841 7.60979L14.3614 6.54516C14.6512 5.95239 14.4216 5.24586 13.8388 4.93662L12.792 4.38121C12.6791 4.32131 12.6016 4.2147 12.5795 4.08882L12.3748 2.92161C12.2608 2.27174 11.6597 1.83504 11.0065 1.92746L9.8332 2.09342C9.70655 2.1113 9.58133 2.07059 9.48946 1.98172L8.63778 1.15781C8.16356 0.699038 7.42065 0.69901 6.94645 1.15781L6.09475 1.9818C6.00285 2.0707 5.87762 2.11133 5.75101 2.09351L4.5777 1.92754C3.92431 1.83507 3.32339 2.27182 3.20939 2.92169L3.00467 4.08884C2.98257 4.21475 2.90514 4.32134 2.79223 4.38127L1.74545 4.93668C1.16263 5.24589 0.93305 5.95247 1.2228 6.54524L1.74319 7.60984C1.79933 7.72471 1.79933 7.85645 1.74319 7.9713L1.22277 9.0359C0.933023 9.62867 1.1626 10.3352 1.74543 10.6444L2.7922 11.1998C2.90514 11.2597 2.98257 11.3664 3.00467 11.4922L3.20939 12.6595C3.31317 13.2511 3.82045 13.6659 4.40347 13.6659C4.46089 13.6659 4.51916 13.6619 4.57772 13.6536L5.75104 13.4876C5.87757 13.4696 6.00288 13.5104 6.09477 13.5993L6.94645 14.4232C7.1836 14.6526 7.4878 14.7673 7.7921 14.7673C8.09633 14.7673 8.40071 14.6526 8.63776 14.4232L9.48946 13.5993C9.58135 13.5104 9.70661 13.4698 9.8332 13.4876L11.0065 13.6536C11.66 13.746 12.2608 13.3093 12.3748 12.6594L12.5796 11.4923C12.6017 11.3664 12.6791 11.2598 12.792 11.1998L13.8388 10.6444C14.4216 10.3352 14.6512 9.62865 14.3614 9.03587L13.841 7.97124ZM6.18253 4.16902C6.99608 4.16902 7.65796 4.83091 7.65796 5.64446C7.65796 6.45801 6.99608 7.11989 6.18253 7.11989C5.36898 7.11989 4.70709 6.45801 4.70709 5.64446C4.70709 4.83091 5.36898 4.16902 6.18253 4.16902ZM5.42098 10.7307C5.34241 10.8092 5.23942 10.8485 5.13646 10.8485C5.0335 10.8485 4.93048 10.8093 4.85194 10.7307C4.6948 10.5735 4.6948 10.3187 4.85194 10.1616L10.1632 4.85034C10.3203 4.6932 10.5751 4.6932 10.7323 4.85034C10.8894 5.00748 10.8894 5.26227 10.7323 5.4194L5.42098 10.7307ZM9.40162 11.412C8.58807 11.412 7.92619 10.7502 7.92619 9.9366C7.92619 9.12305 8.58807 8.46116 9.40162 8.46116C10.2152 8.46116 10.8771 9.12305 10.8771 9.9366C10.8771 10.7502 10.2152 11.412 9.40162 11.412Z" fill="url(#paint0_linear_4110_28222)"></path><path d="M9.40504 9.26611C9.03525 9.26611 8.73438 9.56696 8.73438 9.93675C8.73438 10.3065 9.03522 10.6074 9.40504 10.6074C9.77483 10.6074 10.0757 10.3065 10.0757 9.93675C10.0757 9.56696 9.77483 9.26611 9.40504 9.26611Z" fill="url(#paint1_linear_4110_28222)"></path><path d="M6.19017 4.97363C5.82037 4.97363 5.51953 5.27448 5.51953 5.64427C5.51953 6.01406 5.82037 6.31493 6.19017 6.31493C6.55996 6.31493 6.86083 6.01409 6.86083 5.64427C6.8608 5.2745 6.55996 4.97363 6.19017 4.97363Z" fill="url(#paint2_linear_4110_28222)"></path></g><defs><linearGradient id="paint0_linear_4110_28222" x1="1.09766" y1="1.45972" x2="15.4751" y2="2.63079" gradientUnits="userSpaceOnUse"> <stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint1_linear_4110_28222" x1="8.73438" y1="9.32821" x2="10.1739" y2="9.45041" gradientUnits="userSpaceOnUse"> <stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint2_linear_4110_28222" x1="5.51953" y1="5.03573" x2="6.95905" y2="5.15793" gradientUnits="userSpaceOnUse"> <stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><clipPath id="clip0_4110_28222"><rect width="13.9535" height="13.9535" fill="white" transform="translate(0.814453 0.813965)"></rect></clipPath></defs></svg>`
                : `<svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4"><g clip-path="url(#clip0_4386_22615)"><path d="M2.28797 9.02661C2.86135 9.02661 3.32617 9.49115 3.32617 10.0642C3.32617 10.6372 2.86135 11.1018 2.28797 11.1018C1.71458 11.1018 1.24976 10.6372 1.24976 10.0642C1.25045 9.49143 1.71487 9.0273 2.28797 9.02661ZM2.28797 10.6867C2.53991 10.6867 2.76706 10.535 2.86347 10.3024C2.95989 10.0698 2.90659 9.80202 2.72844 9.62398C2.55028 9.44593 2.28235 9.39267 2.04958 9.48903C1.81681 9.58539 1.66504 9.81239 1.66504 10.0642C1.66504 10.408 1.94393 10.6867 2.28797 10.6867Z" fill="url(#paint0_linear_4386_22615)"></path><path d="M2.29041 10.2717C2.17573 10.2717 2.08276 10.1788 2.08276 10.0642C2.08276 9.9496 2.17573 9.85669 2.29041 9.85669C2.40508 9.85669 2.49805 9.9496 2.49805 10.0642C2.49805 10.1788 2.40508 10.2717 2.29041 10.2717Z" fill="url(#paint1_linear_4386_22615)"></path><path d="M8.724 10.2717C8.60932 10.2717 8.51636 10.1788 8.51636 10.0642C8.51636 9.9496 8.60932 9.85669 8.724 9.85669C8.83868 9.85669 8.93164 9.9496 8.93164 10.0642C8.93164 10.1788 8.83868 10.2717 8.724 10.2717Z" fill="url(#paint2_linear_4386_22615)"></path><path d="M5.19594 7.57452H4.15773V1.55661C4.15842 0.983863 4.62284 0.519729 5.19594 0.519043H10.5946C11.1677 0.519729 11.6321 0.983863 11.6328 1.55661V6.95198C11.6328 7.2958 11.3539 7.57452 11.0099 7.57452H5.19594ZM10.387 1.3491H10.8022C10.9169 1.3491 11.0099 1.25619 11.0099 1.14159C11.0099 1.02698 10.9169 0.934071 10.8022 0.934071H10.387C10.2723 0.934071 10.1793 1.02698 10.1793 1.14159C10.1793 1.25619 10.2723 1.3491 10.387 1.3491ZM6.64942 1.3491H9.34876C9.46344 1.3491 9.5564 1.25619 9.5564 1.14159C9.5564 1.02698 9.46344 0.934071 9.34876 0.934071H6.64942C6.53475 0.934071 6.44178 1.02698 6.44178 1.14159C6.44178 1.25619 6.53475 1.3491 6.64942 1.3491Z" fill="url(#paint3_linear_4386_22615)"></path><path d="M8.72742 9.02661C9.3008 9.02661 9.76562 9.49115 9.76562 10.0642C9.76562 10.6372 9.3008 11.1018 8.72742 11.1018C8.15403 11.1018 7.68921 10.6372 7.68921 10.0642C7.6899 9.49143 8.15432 9.0273 8.72742 9.02661ZM8.72742 10.6867C9.07145 10.6867 9.35034 10.408 9.35034 10.0642C9.35034 9.72036 9.07145 9.44164 8.72742 9.44164C8.38339 9.44164 8.1045 9.72036 8.1045 10.0642C8.1045 10.408 8.38339 10.6867 8.72742 10.6867Z" fill="url(#paint4_linear_4386_22615)"></path><path d="M3.32765 6.12199V4.04685C3.32765 3.70303 3.04876 3.42431 2.70473 3.42431H1.65697L1.91403 3.09021C1.95344 3.03935 2.01412 3.00949 2.07848 3.00928H3.74293V7.57458H1.87416C1.75949 7.57458 1.66652 7.66749 1.66652 7.7821C1.66652 7.89671 1.75949 7.98961 1.87416 7.98961H10.8027V9.2347C10.8027 9.46391 10.6168 9.64972 10.3875 9.64972H10.1175C9.93313 9.03522 9.36721 8.61438 8.72528 8.61438C8.08335 8.61438 7.51744 9.03522 7.33305 9.64972H3.68064C3.49625 9.03522 2.93034 8.61438 2.28841 8.61438C1.64648 8.61438 1.08056 9.03522 0.896172 9.64972H0.420674C0.19132 9.64972 0.00539124 9.46391 0.00539124 9.2347V6.74453H2.70473C3.04876 6.74453 3.32765 6.46581 3.32765 6.12199ZM6.44227 9.2347H6.85755C6.97223 9.2347 7.06519 9.14179 7.06519 9.02718C7.06519 8.91258 6.97223 8.81967 6.85755 8.81967H6.44227C6.32759 8.81967 6.23463 8.91258 6.23463 9.02718C6.23463 9.14179 6.32759 9.2347 6.44227 9.2347ZM4.15822 9.2347H5.6117C5.72638 9.2347 5.81935 9.14179 5.81935 9.02718C5.81935 8.91258 5.72638 8.81967 5.6117 8.81967H4.15822C4.04354 8.81967 3.95057 8.91258 3.95057 9.02718C3.95057 9.14179 4.04354 9.2347 4.15822 9.2347ZM1.0436 7.57458H0.628315C0.513638 7.57458 0.420674 7.66749 0.420674 7.7821C0.420674 7.89671 0.513638 7.98961 0.628315 7.98961H1.0436C1.15827 7.98961 1.25124 7.89671 1.25124 7.7821C1.25124 7.66749 1.15827 7.57458 1.0436 7.57458Z" fill="url(#paint5_linear_4386_22615)"></path><path d="M0.0500684 5.51347L1.3391 3.83862H2.70642C2.8211 3.83862 2.91406 3.93153 2.91406 4.04614V6.12128C2.91406 6.23588 2.8211 6.32879 2.70642 6.32879H0.00708655V5.64005C0.00705091 5.59427 0.0221627 5.54977 0.0500684 5.51347ZM2.0835 5.70625C2.0835 5.82086 2.17646 5.91376 2.29114 5.91376C2.40582 5.91376 2.49878 5.82086 2.49878 5.70625V5.49873C2.49878 5.38413 2.40582 5.29122 2.29114 5.29122C2.17646 5.29122 2.0835 5.38413 2.0835 5.49873V5.70625ZM2.0835 4.66868C2.0835 4.78329 2.17646 4.87619 2.29114 4.87619C2.40582 4.87619 2.49878 4.78329 2.49878 4.66868V4.46117C2.49878 4.34656 2.40582 4.25365 2.29114 4.25365C2.17646 4.25365 2.0835 4.34656 2.0835 4.46117V4.66868Z" fill="url(#paint6_linear_4386_22615)"></path></g><defs><linearGradient id="paint0_linear_4386_22615" x1="3.32617" y1="9.12268" x2="1.09774" y2="9.31197" gradientUnits="userSpaceOnUse"><stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint1_linear_4386_22615" x1="2.49805" y1="9.8759" x2="2.05236" y2="9.91376" gradientUnits="userSpaceOnUse"><stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint2_linear_4386_22615" x1="8.93164" y1="9.8759" x2="8.48595" y2="9.91376" gradientUnits="userSpaceOnUse"><stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint3_linear_4386_22615" x1="11.6328" y1="0.845686" x2="3.6174" y2="1.56656" gradientUnits="userSpaceOnUse"><stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint4_linear_4386_22615" x1="9.76562" y1="9.12268" x2="7.53719" y2="9.31197" gradientUnits="userSpaceOnUse"><stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint5_linear_4386_22615" x1="10.8027" y1="3.31671" x2="-0.650535" y2="4.89756" gradientUnits="userSpaceOnUse"><stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint6_linear_4386_22615" x1="2.91406" y1="3.95391" x2="-0.197698" y2="4.26227" gradientUnits="userSpaceOnUse"><stop class="stop1" stop-color=${color1}></stop><stop class="stop1" offset="1" stop-color=${color2}></stop></linearGradient><clipPath id="clip0_4386_22615"><rect width="11.6279" height="11.6279" fill="white"></rect></clipPath></defs></svg>`,
            text:
              step1TypeOfGift === "copoun"
                ? `${copouns1Text}`
                : `${step1SuccessText}`,
            value: `${step1MinPrice}`,
            styles: {
              background:
                `${copouns1ColorType}` === "gradient"
                  ? `linear-gradient(90deg, ${copouns1Color1}, ${copouns1Color2})`
                  : copouns1Color1,
              textColor: copouns1TextColor,
            },
            copounsCode: copouns1Code,
            stepText: step1Text,
            stepColor: step1Color,
          },
          {
            id: 2,
            headerIcon: `<svg width="31" height="32" viewBox="0 0 31 32" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M29.5054 16.4145C29.3754 16.1511 29.3754 15.8489 29.5054 15.5856L30.7103 13.144C31.3812 11.7846 30.8496 10.1643 29.5002 9.45513L27.0765 8.1814C26.815 8.04402 26.6358 7.79953 26.5846 7.51084L26.1106 4.83406C25.8466 3.3437 24.4548 2.34222 22.9425 2.55415L20.2259 2.93477C19.9326 2.97577 19.6427 2.8824 19.43 2.67859L17.458 0.789108C16.36 -0.263005 14.64 -0.263067 13.542 0.789108L11.57 2.67877C11.3573 2.88265 11.0673 2.97583 10.7741 2.93496L8.05752 2.55434C6.5447 2.34228 5.15335 3.34389 4.88941 4.83425L4.4154 7.51091C4.36423 7.79965 4.18496 8.04409 3.92354 8.18152L1.49988 9.45526C0.15043 10.1644 -0.381122 11.7848 0.289754 13.1442L1.49464 15.5857C1.62463 15.8491 1.62463 16.1512 1.49464 16.4146L0.289691 18.8561C-0.381185 20.2155 0.150367 21.8358 1.49982 22.545L3.92348 23.8187C4.18496 23.9561 4.36423 24.2006 4.4154 24.4893L4.88941 27.1661C5.12969 28.5228 6.30423 29.4743 7.65412 29.4741C7.78707 29.4741 7.92198 29.4649 8.05758 29.4459L10.7742 29.0653C11.0672 29.0241 11.3573 29.1177 11.5701 29.3215L13.542 31.2109C14.0911 31.7371 14.7954 32.0001 15.5 32C16.2044 31.9999 16.9091 31.7369 17.458 31.2109L19.43 29.3215C19.6427 29.1177 19.9328 29.0245 20.2259 29.0653L22.9425 29.4459C24.4555 29.6579 25.8466 28.6563 26.1106 27.166L26.5847 24.4893C26.6358 24.2006 26.8151 23.9562 27.0765 23.8187L29.5002 22.545C30.8496 21.8359 31.3812 20.2154 30.7103 18.856L29.5054 16.4145ZM11.7733 7.69478C13.6569 7.69478 15.1894 9.2127 15.1894 11.0784C15.1894 12.9442 13.6569 14.4621 11.7733 14.4621C9.88962 14.4621 8.35711 12.9442 8.35711 11.0784C8.35711 9.2127 9.88962 7.69478 11.7733 7.69478ZM10.01 22.7427C9.82809 22.9229 9.58964 23.013 9.35125 23.013C9.11286 23.013 8.87434 22.923 8.69249 22.7427C8.32866 22.3824 8.32866 21.7981 8.69249 21.4377L20.9899 9.25726C21.3537 8.89689 21.9437 8.89689 22.3075 9.25726C22.6713 9.61763 22.6713 10.2019 22.3075 10.5623L10.01 22.7427ZM19.2266 24.3053C17.343 24.3053 15.8104 22.7874 15.8104 20.9217C15.8104 19.056 17.343 17.538 19.2266 17.538C21.1103 17.538 22.6428 19.056 22.6428 20.9217C22.6428 22.7874 21.1103 24.3053 19.2266 24.3053Z" fill="#000000"></path></svg>`,
            icon: `<svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_313_10382)"><path d="M336.333 287.066C326.886 287.066 319.2 294.752 319.2 304.199V336.332C319.2 345.779 326.886 353.465 336.333 353.465C345.78 353.465 353.467 345.779 353.467 336.332V304.199C353.467 294.752 345.78 287.066 336.333 287.066Z" fill="url(#paint0_linear_313_10382)"></path><path d="M192.8 207.799V175.666C192.8 166.219 185.114 158.533 175.667 158.533C166.22 158.533 158.534 166.219 158.534 175.666V207.799C158.534 217.246 166.22 224.932 175.667 224.932C185.114 224.932 192.8 217.246 192.8 207.799Z" fill="url(#paint1_linear_313_10382)"></path><path d="M512 256C512 232.107 501.37 209.093 484.555 194.762C491.953 173.949 489.652 148.701 477.702 127.999C465.753 107.306 445.039 92.692 423.313 88.692C419.312 66.967 404.695 46.253 384 34.304C363.305 22.356 338.059 20.052 317.241 27.447C302.912 10.631 279.896 0 256 0C232.104 0 209.088 10.631 194.759 27.447C173.943 20.053 148.694 22.355 128 34.304C107.305 46.253 92.689 66.967 88.687 88.693C66.963 92.694 46.247 107.308 34.297 128.002C22.348 148.702 20.047 173.949 27.445 194.763C10.63 209.093 0 232.107 0 256C0 279.897 10.63 302.914 27.445 317.246C20.046 338.059 22.347 363.306 34.297 383.999C46.245 404.697 66.96 419.314 88.687 423.315C92.689 445.041 107.305 465.754 128 477.704C148.698 489.655 173.944 491.956 194.76 484.556C209.087 501.371 232.102 512 256 512C279.899 512 302.913 501.371 317.24 484.557C338.056 491.956 363.303 489.655 384 477.704C404.695 465.755 419.311 445.04 423.313 423.315C445.038 419.313 465.756 404.696 477.702 384.001C489.653 363.306 491.954 338.06 484.555 317.246C501.37 302.914 512 279.897 512 256ZM128.533 207.8V175.667C128.533 149.678 149.677 128.534 175.666 128.534C201.655 128.534 222.799 149.678 222.799 175.667V207.8C222.799 233.789 201.655 254.933 175.666 254.933C149.677 254.933 128.533 233.789 128.533 207.8ZM187.873 377.186C183.189 383.743 173.864 385.613 166.948 380.673C160.207 375.858 158.646 366.489 163.461 359.748L324.128 134.814C328.944 128.074 338.313 126.512 345.053 131.327C351.794 136.142 353.356 145.511 348.54 152.252L187.873 377.186ZM383.467 336.333C383.467 362.322 362.322 383.466 336.333 383.466C310.344 383.466 289.2 362.323 289.2 336.333V304.2C289.2 278.211 310.344 257.067 336.333 257.067C362.322 257.067 383.467 278.211 383.467 304.2V336.333Z" fill="url(#paint2_linear_313_10382)"></path></g><defs><linearGradient id="paint0_linear_313_10382" x1="336.334" y1="287.066" x2="336.334" y2="353.465" gradientUnits="userSpaceOnUse"><stop class="stop2" stop-color=${color1}></stop><stop class="stop2" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint1_linear_313_10382" x1="175.667" y1="158.533" x2="175.667" y2="224.932" gradientUnits="userSpaceOnUse"><stop class="stop2" stop-color=${color1}></stop><stop class="stop2" offset="1" stop-color=${color2}></stop></linearGradient><linearGradient id="paint2_linear_313_10382" x1="256" y1="0" x2="256" y2="512" gradientUnits="userSpaceOnUse"><stop class="stop2" stop-color=${color1}></stop><stop class="stop2" offset="1" stop-color=${color2}></stop></linearGradient><clipPath id="clip0_313_10382"><rect width="512" height="512" fill="white"></rect></clipPath></defs></svg>`,
            text: step2SuccessText,
            value: `${step2MinPrice}`,
            styles: {
              background:
                `${copouns1ColorType}` === "gradient"
                  ? `linear-gradient(90deg, ${copouns2Color1} 0%, ${copouns2Color2} 100%)`
                  : copouns2Color1,
              textColor: copouns2TextColor,
            },
            copounsCode: copouns2Code,
            stepText: step2Text,
            stepColor: step2Color,
          },
          {
            id: 3,
            headerIcon: `<svg width="31" height="32" viewBox="0 0 31 32" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M29.5054 16.4145C29.3754 16.1511 29.3754 15.8489 29.5054 15.5856L30.7103 13.144C31.3812 11.7846 30.8496 10.1643 29.5002 9.45513L27.0765 8.1814C26.815 8.04402 26.6358 7.79953 26.5846 7.51084L26.1106 4.83406C25.8466 3.3437 24.4548 2.34222 22.9425 2.55415L20.2259 2.93477C19.9326 2.97577 19.6427 2.8824 19.43 2.67859L17.458 0.789108C16.36 -0.263005 14.64 -0.263067 13.542 0.789108L11.57 2.67877C11.3573 2.88265 11.0673 2.97583 10.7741 2.93496L8.05752 2.55434C6.5447 2.34228 5.15335 3.34389 4.88941 4.83425L4.4154 7.51091C4.36423 7.79965 4.18496 8.04409 3.92354 8.18152L1.49988 9.45526C0.15043 10.1644 -0.381122 11.7848 0.289754 13.1442L1.49464 15.5857C1.62463 15.8491 1.62463 16.1512 1.49464 16.4146L0.289691 18.8561C-0.381185 20.2155 0.150367 21.8358 1.49982 22.545L3.92348 23.8187C4.18496 23.9561 4.36423 24.2006 4.4154 24.4893L4.88941 27.1661C5.12969 28.5228 6.30423 29.4743 7.65412 29.4741C7.78707 29.4741 7.92198 29.4649 8.05758 29.4459L10.7742 29.0653C11.0672 29.0241 11.3573 29.1177 11.5701 29.3215L13.542 31.2109C14.0911 31.7371 14.7954 32.0001 15.5 32C16.2044 31.9999 16.9091 31.7369 17.458 31.2109L19.43 29.3215C19.6427 29.1177 19.9328 29.0245 20.2259 29.0653L22.9425 29.4459C24.4555 29.6579 25.8466 28.6563 26.1106 27.166L26.5847 24.4893C26.6358 24.2006 26.8151 23.9562 27.0765 23.8187L29.5002 22.545C30.8496 21.8359 31.3812 20.2154 30.7103 18.856L29.5054 16.4145ZM11.7733 7.69478C13.6569 7.69478 15.1894 9.2127 15.1894 11.0784C15.1894 12.9442 13.6569 14.4621 11.7733 14.4621C9.88962 14.4621 8.35711 12.9442 8.35711 11.0784C8.35711 9.2127 9.88962 7.69478 11.7733 7.69478ZM10.01 22.7427C9.82809 22.9229 9.58964 23.013 9.35125 23.013C9.11286 23.013 8.87434 22.923 8.69249 22.7427C8.32866 22.3824 8.32866 21.7981 8.69249 21.4377L20.9899 9.25726C21.3537 8.89689 21.9437 8.89689 22.3075 9.25726C22.6713 9.61763 22.6713 10.2019 22.3075 10.5623L10.01 22.7427ZM19.2266 24.3053C17.343 24.3053 15.8104 22.7874 15.8104 20.9217C15.8104 19.056 17.343 17.538 19.2266 17.538C21.1103 17.538 22.6428 19.056 22.6428 20.9217C22.6428 22.7874 21.1103 24.3053 19.2266 24.3053Z" fill="#000000"></path></svg>`,
            icon: `<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" fill="none">
      <g clip-path="url(#clip0_831_33200)">
      <path d="M486.287 256L510.747 197.921C513.577 191.191 511.497 183.391 505.677 178.971L455.488 140.841L447.538 78.312C446.618 71.0821 440.918 65.3821 433.688 64.4621L371.159 56.5122L333.039 6.32283C328.619 0.512903 320.819 -1.57707 314.089 1.25289L256 25.7126L197.921 1.25289C191.191 -1.57707 183.391 0.502903 178.971 6.32283L140.841 56.5122L78.312 64.4621C71.0821 65.3821 65.3821 71.0821 64.4621 78.312L56.5122 140.841L6.32283 178.961C0.502903 183.381 -1.57707 191.171 1.25289 197.911L25.7126 256L1.25289 314.079C-1.57707 320.809 0.502903 328.609 6.32283 333.029L56.5122 371.159L64.4621 433.688C65.3821 440.918 71.0821 446.618 78.312 447.538L140.841 455.488L178.961 505.677C182.061 509.757 186.821 511.997 191.701 511.997C196.202 511.997 193.428 512.635 256 486.287L314.079 510.747C320.809 513.577 328.609 511.497 333.029 505.677L371.159 455.488L433.688 447.538C440.918 446.618 446.618 440.918 447.538 433.688L455.488 371.159L505.677 333.039C511.497 328.619 513.577 320.829 510.747 314.089L486.287 256ZM120.001 272C97.9418 272 80.002 254.06 80.002 232C80.002 209.94 97.9418 192.001 120.001 192.001H144.001C152.841 192.001 160.001 199.161 160.001 208C160.001 216.84 152.841 224 144.001 224H120.001C115.592 224 112.002 227.59 112.002 232C112.002 236.41 115.592 240 120.001 240C142.061 240 160.001 257.94 160.001 280C160.001 302.059 142.061 319.999 120.001 319.999H96.0018C87.1619 319.999 80.002 312.839 80.002 303.999C80.002 295.159 87.1619 288 96.0018 288H120.001C124.411 288 128.001 284.41 128.001 280C128.001 275.59 124.411 272 120.001 272ZM380.448 154.181C374.223 160.408 364.092 160.434 357.819 154.181C301.679 98.0318 210.32 98.0318 154.181 154.181C147.931 160.431 137.801 160.431 131.551 154.181C125.301 147.931 125.301 137.801 131.551 131.551C200.171 62.9322 311.829 62.9322 380.448 131.551C386.698 137.801 386.698 147.931 380.448 154.181ZM327.999 288C336.839 288 343.999 295.159 343.999 303.999C343.999 312.839 336.839 319.999 327.999 319.999H288C279.16 319.999 272 312.839 272 303.999V208C272 199.161 279.16 192.001 288 192.001C296.839 192.001 303.999 199.161 303.999 208V288H327.999ZM208 280V303.999C208 312.839 200.841 319.999 192.001 319.999C183.161 319.999 176.001 312.839 176.001 303.999V232C176.001 209.94 193.941 192.001 216 192.001C238.06 192.001 256 209.94 256 232V303.999C256 312.839 248.84 319.999 240 319.999C231.16 319.999 224 312.839 224 303.999V280H208ZM131.551 357.819C137.801 351.569 147.931 351.569 154.181 357.819C210.32 413.968 301.679 413.968 357.819 357.819C364.069 351.569 374.199 351.569 380.448 357.819C386.698 364.069 386.698 374.199 380.448 380.448C311.819 449.078 200.173 449.07 131.551 380.448C125.301 374.199 125.301 364.069 131.551 357.819ZM375.998 319.999C367.159 319.999 359.999 312.839 359.999 303.999V208C359.999 199.161 367.159 192.001 375.998 192.001H415.998C424.838 192.001 431.998 199.161 431.998 208C431.998 216.84 424.838 224 415.998 224H391.998V240H399.998C408.838 240 415.998 247.16 415.998 256C415.998 264.84 408.838 272 399.998 272H391.998V288H415.998C424.838 288 431.998 295.159 431.998 303.999C431.998 312.839 424.838 319.999 415.998 319.999H375.998Z" fill="url(#paint0_linear_831_33200)"/>
      <path d="M224.001 232C224.001 227.59 220.411 224 216.001 224C211.591 224 208.001 227.59 208.001 232V248H224.001V232Z" fill="url(#paint1_linear_831_33200)"/>
      </g>
      <defs>
      <linearGradient id="paint0_linear_831_33200" x1="256" y1="0" x2="256" y2="512" gradientUnits="userSpaceOnUse">
      <stop class="stop3" stop-color=${color1}/>
      <stop class="stop3" offset="1" stop-color=${color2}/>
      </linearGradient>
      <linearGradient id="paint1_linear_831_33200" x1="216.001" y1="224" x2="216.001" y2="248" gradientUnits="userSpaceOnUse">
      <stop class="stop3" stop-color=${color1}/>
      <stop class="stop3" offset="1" stop-color=${color2}/>
      </linearGradient>
      <clipPath id="clip0_831_33200">
      <rect width="512" height="512" fill="white"/>
      </clipPath>
      </defs>
      </svg>`,
            text: step3SuccessText,
            value: `${step3MinPrice}`,
            styles: {
              background:
                `${copouns1ColorType}` === "gradient"
                  ? `linear-gradient(180deg, ${copouns3Color1} 0%, ${copouns3Color2} 100%)`
                  : copouns3Color1,
              textColor: copouns3TextColor,
            },
            copounsCode:copouns3Code,
            stepText: step3Text,
            stepColor: step3Color,
          },
        ].slice(0, `${stepsNo}`);
  
        let giftsCount = `${stepsNo}`;
        if (giftsCount > giftData.length) {
          giftsCount = giftData.length;
        }
        const sliderProgress = document.querySelector(".slider-progress");
        const createThumb = (
          leftPosition,
          icon,
          giftText,
          copounsCode,
          giftValue,
          stepText,
          stepColor
        ) => {
          const sliderThumb = document.createElement("div");
          sliderThumb.className = "slider-thumb";
          sliderThumb.style.right = leftPosition;
          if (`${colorType}` === "gradient") {
            sliderThumb.style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
          } else if (`${colorType}` === "one color") {
            sliderThumb.style.background = `${color1}`;
          }
          const iconContainer = document.createElement("div");
          iconContainer.className = "iconSales";
          iconContainer.innerHTML = icon; // Set the innerHTML to render the image or icon
  
          const tooltip = document.createElement("span");
          tooltip.className = "tooltip";
          tooltip.textContent = `${stepText}`;
          tooltip.style.color = `${stepColor}`;
  
          sliderThumb.appendChild(iconContainer);
          sliderThumb.appendChild(tooltip);
          document
            .querySelector(".slider-container")
            .appendChild(sliderThumb);
        };
  
        const showGiftPopup = (giftText, giftStyles, copounsCode) => {
          console.log("momomomomo")
          const lastGift =
            [...giftData]
              .reverse()
              .find((gift) => gift.value <= currentAmount) || null;
          const popup = document.createElement("div");
          popup.className = "popup";
          popup.innerHTML = `
            <button class="closeBtn"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M405 136.798L375.202 107 256 226.202 136.798 107 107 136.798 226.202 256 107 375.202 136.798 405 256 285.798 375.202 405 405 375.202 285.798 256z"></path></svg></button>
            <div class="popup-content">
            <p style="line-height: 1.5;">${giftText}</p> 
           
                ${
                  lastGift && lastGift.id === 1
                    ? `${
                        "$step1TypeOfGift" === "copoun"
                          ? `<p style="font-weight: 800;
      font-size: 1.5rem;">${copounsCode}</p>`
                          : ""
                      }`
                    : `<p style="font-weight: 800;
      font-size: 1.5rem;">${copounsCode}</p>`
                }
            </div>
          `;
  
          // Apply custom styles to the popup
          const nextGift = giftData.find(
            (gift) => gift.value > currentAmount
          );
  
          popup.style.background = giftStyles.background;
          popup.querySelectorAll("p").forEach((p) => {
            p.style.color = giftStyles.textColor;
          });
  
          document.body.appendChild(popup);
          window.confetti.render();
          document.querySelector("#confetti-canvas").style.display = "block";
          popup.querySelector(".closeBtn").onclick =
            () => {
              closePopup(popup);
              localStorage.setItem("lastShownGiffft", lastGift.id);
            };
        };
  
        const closePopup = (popupElement) => {
          document.body.removeChild(popupElement);
          document.querySelector("#confetti-canvas").style.display = "none";
        };
        for (let i = 0; i < giftsCount; i++) {
          const gift = giftData[i];
          const position =
            (gift.value / totalAmount) * 100;
            console.log('position', position,totalAmount)
          createThumb(
            `${position}%`,
            gift.icon,
            gift.text,
            gift.copounsCode,
            gift.value,
            gift.stepText,
            gift.stepColor
          );
        }
  
        const updateProgressBar = (newAmount) => {
          const newWidth = (newAmount / totalAmount) * 100;
          if (newWidth <= 100) {
            sliderProgress.style.width = `${newWidth}%`;
          } else {
            sliderProgress.style.width = `100%`;
          }
        };
        ///////////////////////////
        let lastShownGift = null;
  
        const updateCurrentAmount = () => {
          if (`${stepsNo}` == 1) {
            if (typeof salla !== "undefined" && salla.cart) {
              salla.cart.event.onUpdated((summary) => {
                if (summary.total) {
                  currentAmount = summary.total;
                  updateCurrentAmount();
                  updateProgressBar(currentAmount);
                }
              });
              salla.cart.details().then((response) => {
                const currentAmount = response.data.cart.total;
                updateProgressBar(currentAmount);
                const infoText = document.querySelector(
                  ".info-text"
                );
                // Determine the next gift based on the current amount
                const nextGift = giftData.find(
                  (gift) => gift.value > currentAmount
                );
                const nextGiftRemainingAmount = nextGift
                  ? (
                      nextGift.value - currentAmount
                    ).toFixed(2)
                  : 0;
                const lastGift =
                  [...giftData]
                    .reverse()
                    .find((gift) => gift.value <= currentAmount) ||
                  null;
                infoText.innerHTML = `
        ${
          !nextGiftRemainingAmount
            ? `
          <div class="information-text">
           
            ${giftData[0].headerIcon}
            <div class="inner-dev-">
            <p>${giftData[0].text}</p>
           ${
             lastGift && lastGift.id === 1
               ? `${
                   "$step1TypeOfGift" === "copoun"
                     ? `<p style="color: red;" >${
                         lastGift
                           ? lastGift.copounsCode
                           : ""
                       }</p>`
                     : ""
                 }`
               : `<p style="color: red;">${
                   lastGift ? lastGift.copounsCode : ""
                 }</p> </div>`
           }
            
          </div>`
            : `
          <div class="information-text">
            ${giftData[0].headerIcon}
            <p>باقي ${nextGiftRemainingAmount} ر.س</p>
            علي الهدية التالية
          </div>`
        }
                `;
                const iconSalesback = document.querySelector(
                  ".iconSales"
                );
                const stops1 = document.querySelectorAll(".stop1");
                if (
                  currentAmount >= giftData[0].value &&
                  localStorage.getItem("lastShownGiffft") !=
                    lastGift.id
                ) {
                  showGiftPopup(
                    giftData[0].text,
                    giftData[0].styles,
                    giftData[0].copounsCode
                  );
                  iconSalesback.style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
                  stops1.forEach((stop, index) => {
                    if (index % 2 === 0) {
                      stop.setAttribute("stop-color", `#ffffff`);
                    } else {
                      stop.setAttribute("stop-color", `#ffffff`);
                    }
                  });
                } else {
                  iconSalesback.style.background = "#ffffff";
                  stops1.forEach((stop, index) => {
                    if (index % 2 === 0) {
                      stop.setAttribute("stop-color", `${color2}`);
                    } else {
                      stop.setAttribute("stop-color", `${color1}`);
                    }
                  });
                }
              });
            } else {
              setTimeout(() => {
                if (typeof salla !== "undefined" && salla.cart) {
                  fetchCartDetails();
                } else {
                  console.error("Salla SDK is still unavailable.");
                }
              }, 1000);
            }
          } else {
            if (typeof salla !== "undefined" && salla.cart) {
              salla.cart
                .details()
                .then((response) => {
                  const currentAmount = response.data.cart.total;
                  const remainingAmount =
                    totalAmount - currentAmount;
                  // Update progress bar and remaining amount display
                  updateProgressBar(currentAmount);
                  const infoText = document.querySelector(
                    ".info-text"
                  );
                  // Determine the next gift based on the current amount
                  const nextGift = giftData.find(
                    (gift) => gift.value > currentAmount
                  );
                  const lastGift =
                    [...giftData]
                      .reverse()
                      .find((gift) => gift.value <= currentAmount) ||
                    null;
                  const nextGiftRemainingAmount = nextGift
                    ? (
                        nextGift.value - currentAmount
                      ).toFixed(2)
                    : 0;
  
                  // Update the inner HTML of the info text
                  infoText.innerHTML = `
          ${
            !nextGiftRemainingAmount
              ? `
            <div class="information-text">
              ${lastGift.headerIcon}
              <div class="inner-dev-">
              <p>${lastGift.text}</p>
             ${
               lastGift && lastGift.id === 1
                 ? `${
                     "$step1TypeOfGift" === "copoun"
                       ? `<p style="color: red;">${
                           lastGift
                             ? lastGift.copounsCode
                             : ""
                         }</p>`
                       : ""
                   }`
                 : `<p style="color: red;">${
                     lastGift ? lastGift.copounsCode : ""
                   }</p> </div>`
             }
              
            </div>`
              : `
            <div class="information-text">
              ${nextGift.headerIcon}
              <div class="inner-dev-"> 
               <p>${lastGift ? lastGift.text : ""}</p>
               ${
                 lastGift && lastGift.id === 1
                   ? `${
                       "$step1TypeOfGift" === "copoun"
                         ? `<p style="color: red;">${
                             lastGift
                               ? lastGift.copounsCode
                               : ""
                           }</p>`
                         : ""
                     }`
                   : `<p style="color: red;">${
                       lastGift
                         ? lastGift.copounsCode
                         : ""
                     }</p> </div>`
               }
              <p>باقي ${nextGiftRemainingAmount} ر.س</p>
              علي الهدية التالية
            </div>`
          }
                  `;
                  // Check if the current gift is different from the last shown gift
                  const iconSalesback = document.querySelectorAll(
                    ".iconSales"
                  );
                  iconSalesback.forEach((icon) => {
                    icon.style.background = "white";
                  });
                  const stops1 = document.querySelectorAll(".stop1");
                  const stops2 = document.querySelectorAll(".stop2");
                  const stops3 = document.querySelectorAll(".stop3");
                  stops1.forEach((stop, index) => {
                    if (index % 2 === 0) {
                      stop.setAttribute("stop-color", `${color2}`);
                    } else {
                      stop.setAttribute("stop-color", `${color1}`);
                    }
                  });
                  stops2.forEach((stop, index) => {
                    if (index % 2 === 0) {
                      stop.setAttribute("stop-color", `${color2}`);
                    } else {
                      stop.setAttribute("stop-color", `${color1}`);
                    }
                  });
                  stops3.forEach((stop, index) => {
                    if (index % 2 === 0) {
                      stop.setAttribute("stop-color", `${color2}`);
                    } else {
                      stop.setAttribute("stop-color", `${color1}`);
                    }
                  });
  
                  if (lastGift.id === 1) {
                    iconSalesback[0].style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
                    iconSalesback[1].style.background = "white";
                  } else if (lastGift.id === 2) {
                    iconSalesback[0].style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
                    iconSalesback[1].style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
                  } else if (lastGift.id === 3) {
                    iconSalesback[0].style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
                    iconSalesback[1].style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
                    iconSalesback[2].style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
                  } else {
                    console.log(" ");
                  }
  
                  if (currentAmount >= lastGift.value) {
                    stops1.forEach((stop) =>
                      stop.setAttribute("stop-color", "#ffffff")
                    );
  
                    // lastShownGift = lastGift.id;
                    if (
                      localStorage.getItem("lastShownGiffft") !=
                      lastGift.id
                    ) {
                      showGiftPopup(
                        lastGift.text,
                        lastGift.styles,
                        lastGift.copounsCode
                      );
                    }
                    if (lastGift.id === 2) {
                      stops2.forEach((stop) =>
                        stop.setAttribute("stop-color", "#ffffff")
                      );
                      stops1.forEach((stop) =>
                        stop.setAttribute("stop-color", "#ffffff")
                      );
                    } else if (lastGift.id === 3) {
                      stops3.forEach((stop) =>
                        stop.setAttribute("stop-color", "#ffffff")
                      );
                      stops2.forEach((stop) =>
                        stop.setAttribute("stop-color", "#ffffff")
                      );
                      stops2.forEach((stop) =>
                        stop.setAttribute("stop-color", "#ffffff")
                      );
                    } else {
                      console.log("sec undefined");
                    }
                  } else {
                    console.log(" sec undefined");
                  }
                })
                .catch((error) => {
                  console.error("Error fetching data:", error);
                });
            } else {
              setTimeout(() => {
                if (typeof salla !== "undefined" && salla.cart) {
                  fetchCartDetails();
                } else {
                  console.error("Salla SDK is still unavailable.");
                }
              }, 1000);
            }
          }
        };
        updateCurrentAmount();
        // Update when item is added
        if (typeof salla !== "undefined" && salla.cart) {
          salla.cart.event.onUpdated((summary) => {
            if (summary.total) {
              currentAmount = summary.total;
              updateCurrentAmount();
              updateProgressBar(currentAmount);
            }
          });
          // salla.cart.event.onItemAdded((response, prodId) => {
          //   // Update currentAmount with the new cart total
          //   currentAmount = response.data.cart.total;
          //   updateCurrentAmount();
          //   updateProgressBar(currentAmount);
          //   // updateRemainingAmountText(remainingAmount); // Update the displayed remaining amount
          // });
        } else {
          setTimeout(() => {
            if (typeof salla !== "undefined" && salla.cart) {
              fetchCartDetails();
            } else {
              console.error("Salla SDK is still unavailable.");
            }
          }, 1000);
        }
        if (typeof salla !== "undefined" && salla.cart) {
          salla.cart.event.onItemDeleted((response, prodId) => {
            currentAmount = response.data.cart.total;
            updateCurrentAmount();
            updateProgressBar(currentAmount);
            const lastGift =
              [...giftData]
                .reverse()
                .find((gift) => gift.value <= currentAmount) || null;
            const nextGift = giftData.find(
              (gift) => gift.value > currentAmount
            );
            if (nextGift.id === 1) {
              localStorage.setItem("lastShownGiffft", 0);
            } else {
              localStorage.setItem("lastShownGiffft", lastGift.id);
            }
            // updateRemainingAmountText(remainingAmount); // Update the displayed remaining amount
          });
        } else {
          setTimeout(() => {
            if (typeof salla !== "undefined" && salla.cart) {
              fetchCartDetails();
            } else {
              console.error("Salla SDK is still unavailable.");
            }
          }, 1000);
        }
  
        //////////////////////////////////
        pluginContainer = document.querySelector(
          ".plugin-container"
        );
        ClosePlugin = document.querySelector(
          ".ClosePlugin"
        );
        const scaleNum = width / 100;
        pluginContainer.style.scale = `${scaleNum}`;
        ////////////////////////////////////////////////////////////////
        if (`${place}` === "يمين") {
          pluginContainer.style.right = "5px";
          pluginContainer.style.top = "50%";
          pluginContainer.style.transformOrigin = "right";
          ClosePlugin.style.left = "15px";
        } else if (`${place}` === "يسار") {
          pluginContainer.style.left = "5px";
          pluginContainer.style.top = "50%";
          pluginContainer.style.transformOrigin = "left";
          ClosePlugin.style.right = "15px";
        } else if (`${place}` === "منتصف") {
          pluginContainer.style.left = "50%";
        } else if (`${place}` === "اسفل - يسار") {
          pluginContainer.style.left = "5px";
          pluginContainer.style.bottom = "0px";
          pluginContainer.style.transformOrigin = "left";
        } else if (`${place}` === "الاعلى - يسار") {
          pluginContainer.style.left = "5px";
          pluginContainer.style.top = "0px";
          pluginContainer.style.transformOrigin = "left";
        } else if (`${place}` === "الاعلى - يمين") {
          pluginContainer.style.right = "5px";
          pluginContainer.style.top = "0px";
          pluginContainer.style.transformOrigin = "right";
        } else if (`${place}` === "الاعلى - منتصف") {
          pluginContainer.style.left = "50%";
          pluginContainer.style.top = "0px";
          pluginContainer.style.transformOrigin = "center";
        } else if (`${place}` === "اسفل - يمين") {
          pluginContainer.style.right = "5px";
          pluginContainer.style.bottom = "0px";
          pluginContainer.style.transformOrigin = "right";
        } else if (`${place}` === "اسفل - منتصف") {
          pluginContainer.style.left = "50%";
          pluginContainer.style.bottom = "0px";
          pluginContainer.style.transformOrigin = "center";
        }
  
        if (`${colorType}` === "gradient") {
          sliderProgress.style.background = `linear-gradient(94.85deg, ${color1} 0.36%, ${color2} 100%)`;
        } else if (`${colorType}` === "one color") {
          sliderProgress.style.background = `${color1}`;
        }
        const displayTime = waitingTimeToShowPopup * 1000;
        const appearTime = ShowingTime * 1000;
  
        const waitingTime = displayTime; // Time the popup stays visible (in ms)
        const displayTimedisplayTime = appearTime; // Time between popups (in ms)
        let intervalId, timeoutId;
  
        // Function to show the popup
        function showPopup() {
          // Show the popup by adding the slide-in class
          pluginContainer.classList.add("slide-out");
          pluginContainer.classList.remove("slide-in");
  
          // Schedule popup to hide after display time
          timeoutId = setTimeout(() => {
            hidePopup(); // Hide the popup after `displayTimedisplayTime`
            scheduleNextPopup(); // Schedule the next automatic appearance
          }, displayTimedisplayTime);
        }
        // Function to hide the popup
        function hidePopup() {
          // Hide the popup by adding the slide-out class
          pluginContainer.classList.remove("slide-out");
          pluginContainer.classList.add("slide-in");
        }
  
        // Schedule the next popup appearance after waiting time
        function scheduleNextPopup() {
          // Clear any existing intervals to avoid overlapping schedules
          clearTimeout(intervalId);
          clearTimeout(timeoutId);
          // Schedule the next popup to show after `waitingTime`
          intervalId = setTimeout(() => {
            showPopup(); // Show the popup after `waitingTime`
          }, waitingTime);
        }
        function resetPopup() {
          hidePopup();
  
          // Clear any existing intervals and timeouts
          clearTimeout(intervalId);
          clearTimeout(timeoutId);
  
          // Only restart after `waitingTime` (ignoring `displayTime`)
          intervalId = setTimeout(() => {
            showPopup(); // Restart showing the popup
          }, waitingTime);
        }
        // Initial start of the popup cycle
        setTimeout(() => {
          showPopup();
        }, waitingTime);
        ClosePlugin.addEventListener("click", () => {
          resetPopup();
        });
      }
    }, 0);
  });
